{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shagu\\\\OneDrive\\\\Desktop\\\\better-internship-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const fetchComments = () => {\n    fetch(\"http://127.0.0.1:5000/comments\").then(res => res.json()).then(data => setComments(data)).catch(err => console.error(\"Error fetching comments:\", err));\n  };\n  const handleAddComment = () => {\n    if (!newComment.trim()) return;\n    fetch(\"http://127.0.0.1:5000/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: newComment\n      })\n    }).then(res => res.json()).then(data => {\n      setComments([...comments, data]);\n      setNewComment(\"\");\n    }).catch(err => console.error(\"Error adding comment:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      placeholder: \"Write a comment...\",\n      style: {\n        marginRight: \"1rem\",\n        padding: \"0.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddComment,\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment.text\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+OVXuOcjEFRN/kXBrT9MF+duWSc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","comments","setComments","newComment","setNewComment","fetchComments","fetch","then","res","json","data","catch","err","console","error","handleAddComment","trim","method","headers","body","JSON","stringify","text","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","marginRight","onClick","length","map","comment","id","_c","$RefreshReg$"],"sources":["C:/Users/shagu/OneDrive/Desktop/better-internship-project/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const fetchComments = () => {\n    fetch(\"http://127.0.0.1:5000/comments\")\n      .then((res) => res.json())\n      .then((data) => setComments(data))\n      .catch((err) => console.error(\"Error fetching comments:\", err));\n  };\n\n  const handleAddComment = () => {\n    if (!newComment.trim()) return;\n\n    fetch(\"http://127.0.0.1:5000/comments\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ text: newComment }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setComments([...comments, data]);\n        setNewComment(\"\");\n      })\n      .catch((err) => console.error(\"Error adding comment:\", err));\n  };\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      <h1>Comments</h1>\n\n      <input\n        type=\"text\"\n        value={newComment}\n        onChange={(e) => setNewComment(e.target.value)}\n        placeholder=\"Write a comment...\"\n        style={{ marginRight: \"1rem\", padding: \"0.5rem\" }}\n      />\n      <button onClick={handleAddComment}>Add Comment</button>\n\n      {comments.length === 0 ? (\n        <p>No comments found</p>\n      ) : (\n        <ul>\n          {comments.map((comment) => (\n            <li key={comment.id}>{comment.text}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}